"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/ar/[id]/page",{

/***/ "(app-pages-browser)/./src/hooks/useMindAR.ts":
/*!********************************!*\
  !*** ./src/hooks/useMindAR.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMindArScripts: () => (/* binding */ useMindArScripts)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useMindArScripts auto */ \nfunction useMindArScripts() {\n    const [ready, setReady] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useMindArScripts.useEffect\": ()=>{\n            // Already loaded?\n            if (window.AFRAME && window.MINDAR) {\n                setReady(true);\n                return;\n            }\n            const addScript = {\n                \"useMindArScripts.useEffect.addScript\": (src)=>new Promise({\n                        \"useMindArScripts.useEffect.addScript\": (resolve, reject)=>{\n                            if (document.querySelector('script[src=\"'.concat(src, '\"]'))) return resolve();\n                            const s = document.createElement(\"script\");\n                            s.src = src;\n                            s.async = true;\n                            s.onload = ({\n                                \"useMindArScripts.useEffect.addScript\": ()=>resolve()\n                            })[\"useMindArScripts.useEffect.addScript\"];\n                            s.onerror = ({\n                                \"useMindArScripts.useEffect.addScript\": ()=>reject(new Error(\"Failed to load script: \".concat(src)))\n                            })[\"useMindArScripts.useEffect.addScript\"];\n                            document.head.appendChild(s);\n                        }\n                    }[\"useMindArScripts.useEffect.addScript\"])\n            }[\"useMindArScripts.useEffect.addScript\"];\n            const addCss = {\n                \"useMindArScripts.useEffect.addCss\": (href)=>new Promise({\n                        \"useMindArScripts.useEffect.addCss\": (resolve, reject)=>{\n                            if (document.querySelector('link[href=\"'.concat(href, '\"]'))) return resolve();\n                            const l = document.createElement(\"link\");\n                            l.rel = \"stylesheet\";\n                            l.href = href;\n                            l.onload = ({\n                                \"useMindArScripts.useEffect.addCss\": ()=>{\n                                    console.log(\"‚úÖ CSS loaded: \".concat(href));\n                                    resolve();\n                                }\n                            })[\"useMindArScripts.useEffect.addCss\"];\n                            l.onerror = ({\n                                \"useMindArScripts.useEffect.addCss\": (error)=>{\n                                    console.warn(\"‚ö†Ô∏è Error loading CSS: \".concat(href), error);\n                                    reject(new Error(\"Failed to load CSS: \".concat(href)));\n                                }\n                            })[\"useMindArScripts.useEffect.addCss\"];\n                            document.head.appendChild(l);\n                        }\n                    }[\"useMindArScripts.useEffect.addCss\"])\n            }[\"useMindArScripts.useEffect.addCss\"];\n            ({\n                \"useMindArScripts.useEffect\": async ()=>{\n                    try {\n                        console.log(\"üöÄ Loading AR scripts...\");\n                        // Local CSS first\n                        await addCss(\"/ar-styles.css\");\n                        // A-Frame\n                        await addScript(\"https://aframe.io/releases/1.4.2/aframe.min.js\");\n                        console.log(\"‚úÖ A-Frame loaded\");\n                        // MindAR\n                        await addScript(\"https://cdn.jsdelivr.net/npm/mind-ar@1.2.5/dist/mindar-image-aframe.prod.js\");\n                        console.log(\"‚úÖ MindAR loaded\");\n                        // Verify everything loaded correctly\n                        await new Promise({\n                            \"useMindArScripts.useEffect\": (resolve)=>{\n                                const checkLoaded = {\n                                    \"useMindArScripts.useEffect.checkLoaded\": ()=>{\n                                        if (window.AFRAME && window.MINDAR) {\n                                            console.log(\"‚úÖ AR scripts ready\");\n                                            resolve();\n                                        } else {\n                                            setTimeout(checkLoaded, 100);\n                                        }\n                                    }\n                                }[\"useMindArScripts.useEffect.checkLoaded\"];\n                                checkLoaded();\n                            }\n                        }[\"useMindArScripts.useEffect\"]);\n                        setReady(true);\n                    } catch (err) {\n                        console.error(\"‚ùå Error loading AR scripts:\", err);\n                        setError(String(err));\n                    }\n                }\n            })[\"useMindArScripts.useEffect\"]();\n        }\n    }[\"useMindArScripts.useEffect\"], []);\n    return {\n        ready,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VNaW5kQVIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O3NFQUU0QztBQUVyQyxTQUFTRTtJQUNkLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHSCwrQ0FBUUEsQ0FBQztJQUNuQyxNQUFNLENBQUNJLE9BQU9DLFNBQVMsR0FBR0wsK0NBQVFBLENBQVM7SUFFM0NELGdEQUFTQTtzQ0FBQztZQUNSLGtCQUFrQjtZQUNsQixJQUFJLE9BQWdCUSxNQUFNLElBQUksT0FBZ0JDLE1BQU0sRUFBRTtnQkFDcERMLFNBQVM7Z0JBQ1Q7WUFDRjtZQUVBLE1BQU1NO3dEQUFZLENBQUNDLE1BQ2pCLElBQUlDO2dFQUFjLENBQUNDLFNBQVNDOzRCQUMxQixJQUFJQyxTQUFTQyxhQUFhLENBQUMsZUFBbUIsT0FBSkwsS0FBSSxRQUFNLE9BQU9FOzRCQUMzRCxNQUFNSSxJQUFJRixTQUFTRyxhQUFhLENBQUM7NEJBQ2pDRCxFQUFFTixHQUFHLEdBQUdBOzRCQUNSTSxFQUFFRSxLQUFLLEdBQUc7NEJBQ1ZGLEVBQUVHLE1BQU07d0VBQUcsSUFBTVA7OzRCQUNqQkksRUFBRUksT0FBTzt3RUFBRyxJQUFNUCxPQUFPLElBQUlRLE1BQU0sMEJBQThCLE9BQUpYOzs0QkFDN0RJLFNBQVNRLElBQUksQ0FBQ0MsV0FBVyxDQUFDUDt3QkFDNUI7OztZQUVGLE1BQU1RO3FEQUFTLENBQUNDLE9BQ2QsSUFBSWQ7NkRBQWMsQ0FBQ0MsU0FBU0M7NEJBQzFCLElBQUlDLFNBQVNDLGFBQWEsQ0FBQyxjQUFtQixPQUFMVSxNQUFLLFFBQU0sT0FBT2I7NEJBQzNELE1BQU1jLElBQUlaLFNBQVNHLGFBQWEsQ0FBQzs0QkFDakNTLEVBQUVDLEdBQUcsR0FBRzs0QkFDUkQsRUFBRUQsSUFBSSxHQUFHQTs0QkFDVEMsRUFBRVAsTUFBTTtxRUFBRztvQ0FDVFMsUUFBUUMsR0FBRyxDQUFDLGlCQUFzQixPQUFMSjtvQ0FDN0JiO2dDQUNGOzs0QkFDQWMsRUFBRU4sT0FBTztxRUFBRyxDQUFDaEI7b0NBQ1h3QixRQUFRRSxJQUFJLENBQUMseUJBQThCLE9BQUxMLE9BQVFyQjtvQ0FDOUNTLE9BQU8sSUFBSVEsTUFBTSx1QkFBNEIsT0FBTEk7Z0NBQzFDOzs0QkFDQVgsU0FBU1EsSUFBSSxDQUFDQyxXQUFXLENBQUNHO3dCQUM1Qjs7O1lBRUY7OENBQUM7b0JBQ0MsSUFBSTt3QkFDRkUsUUFBUUMsR0FBRyxDQUFDO3dCQUVaLGtCQUFrQjt3QkFDbEIsTUFBTUwsT0FBTzt3QkFFYixVQUFVO3dCQUNWLE1BQU1mLFVBQVU7d0JBQ2hCbUIsUUFBUUMsR0FBRyxDQUFDO3dCQUVaLFNBQVM7d0JBQ1QsTUFBTXBCLFVBQ0o7d0JBRUZtQixRQUFRQyxHQUFHLENBQUM7d0JBRVoscUNBQXFDO3dCQUNyQyxNQUFNLElBQUlsQjswREFBYyxDQUFDQztnQ0FDdkIsTUFBTW1COzhFQUFjO3dDQUNsQixJQUFJLE9BQWdCeEIsTUFBTSxJQUFJLE9BQWdCQyxNQUFNLEVBQUU7NENBQ3BEb0IsUUFBUUMsR0FBRyxDQUFDOzRDQUNaakI7d0NBQ0YsT0FBTzs0Q0FDTG9CLFdBQVdELGFBQWE7d0NBQzFCO29DQUNGOztnQ0FDQUE7NEJBQ0Y7O3dCQUVBNUIsU0FBUztvQkFDWCxFQUFFLE9BQU84QixLQUFLO3dCQUNaTCxRQUFReEIsS0FBSyxDQUFDLCtCQUErQjZCO3dCQUM3QzVCLFNBQVM2QixPQUFPRDtvQkFDbEI7Z0JBQ0Y7O1FBQ0Y7cUNBQUcsRUFBRTtJQUVMLE9BQU87UUFBRS9CO1FBQU9FO0lBQU07QUFDeEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcanVhbnBcXHNvdXJjZVxccmVwb3NcXFFSLUFwcFxccXItYXItYWRtaW5cXHNyY1xcaG9va3NcXHVzZU1pbmRBUi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcclxuXHJcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiB1c2VNaW5kQXJTY3JpcHRzKCkge1xyXG4gIGNvbnN0IFtyZWFkeSwgc2V0UmVhZHldID0gdXNlU3RhdGUoZmFsc2UpO1xyXG4gIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIC8vIEFscmVhZHkgbG9hZGVkP1xyXG4gICAgaWYgKCh3aW5kb3cgYXMgYW55KS5BRlJBTUUgJiYgKHdpbmRvdyBhcyBhbnkpLk1JTkRBUikge1xyXG4gICAgICBzZXRSZWFkeSh0cnVlKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGFkZFNjcmlwdCA9IChzcmM6IHN0cmluZykgPT5cclxuICAgICAgbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBzY3JpcHRbc3JjPVwiJHtzcmN9XCJdYCkpIHJldHVybiByZXNvbHZlKCk7XHJcbiAgICAgICAgY29uc3QgcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcbiAgICAgICAgcy5zcmMgPSBzcmM7XHJcbiAgICAgICAgcy5hc3luYyA9IHRydWU7XHJcbiAgICAgICAgcy5vbmxvYWQgPSAoKSA9PiByZXNvbHZlKCk7XHJcbiAgICAgICAgcy5vbmVycm9yID0gKCkgPT4gcmVqZWN0KG5ldyBFcnJvcihgRmFpbGVkIHRvIGxvYWQgc2NyaXB0OiAke3NyY31gKSk7XHJcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgY29uc3QgYWRkQ3NzID0gKGhyZWY6IHN0cmluZykgPT5cclxuICAgICAgbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBsaW5rW2hyZWY9XCIke2hyZWZ9XCJdYCkpIHJldHVybiByZXNvbHZlKCk7XHJcbiAgICAgICAgY29uc3QgbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xyXG4gICAgICAgIGwucmVsID0gXCJzdHlsZXNoZWV0XCI7XHJcbiAgICAgICAgbC5ocmVmID0gaHJlZjtcclxuICAgICAgICBsLm9ubG9hZCA9ICgpID0+IHtcclxuICAgICAgICAgIGNvbnNvbGUubG9nKGDinIUgQ1NTIGxvYWRlZDogJHtocmVmfWApO1xyXG4gICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgbC5vbmVycm9yID0gKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLndhcm4oYOKaoO+4jyBFcnJvciBsb2FkaW5nIENTUzogJHtocmVmfWAsIGVycm9yKTtcclxuICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEZhaWxlZCB0byBsb2FkIENTUzogJHtocmVmfWApKTtcclxuICAgICAgICB9O1xyXG4gICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQobCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgIChhc3luYyAoKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLwn5qAIExvYWRpbmcgQVIgc2NyaXB0cy4uLlwiKTtcclxuXHJcbiAgICAgICAgLy8gTG9jYWwgQ1NTIGZpcnN0XHJcbiAgICAgICAgYXdhaXQgYWRkQ3NzKFwiL2FyLXN0eWxlcy5jc3NcIik7XHJcblxyXG4gICAgICAgIC8vIEEtRnJhbWVcclxuICAgICAgICBhd2FpdCBhZGRTY3JpcHQoXCJodHRwczovL2FmcmFtZS5pby9yZWxlYXNlcy8xLjQuMi9hZnJhbWUubWluLmpzXCIpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi4pyFIEEtRnJhbWUgbG9hZGVkXCIpO1xyXG5cclxuICAgICAgICAvLyBNaW5kQVJcclxuICAgICAgICBhd2FpdCBhZGRTY3JpcHQoXHJcbiAgICAgICAgICBcImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbWluZC1hckAxLjIuNS9kaXN0L21pbmRhci1pbWFnZS1hZnJhbWUucHJvZC5qc1wiXHJcbiAgICAgICAgKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuKchSBNaW5kQVIgbG9hZGVkXCIpO1xyXG5cclxuICAgICAgICAvLyBWZXJpZnkgZXZlcnl0aGluZyBsb2FkZWQgY29ycmVjdGx5XHJcbiAgICAgICAgYXdhaXQgbmV3IFByb21pc2U8dm9pZD4oKHJlc29sdmUpID0+IHtcclxuICAgICAgICAgIGNvbnN0IGNoZWNrTG9hZGVkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoKHdpbmRvdyBhcyBhbnkpLkFGUkFNRSAmJiAod2luZG93IGFzIGFueSkuTUlOREFSKSB7XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLinIUgQVIgc2NyaXB0cyByZWFkeVwiKTtcclxuICAgICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgc2V0VGltZW91dChjaGVja0xvYWRlZCwgMTAwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIGNoZWNrTG9hZGVkKCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHNldFJlYWR5KHRydWUpO1xyXG4gICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwi4p2MIEVycm9yIGxvYWRpbmcgQVIgc2NyaXB0czpcIiwgZXJyKTtcclxuICAgICAgICBzZXRFcnJvcihTdHJpbmcoZXJyKSk7XHJcbiAgICAgIH1cclxuICAgIH0pKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4geyByZWFkeSwgZXJyb3IgfTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VNaW5kQXJTY3JpcHRzIiwicmVhZHkiLCJzZXRSZWFkeSIsImVycm9yIiwic2V0RXJyb3IiLCJ3aW5kb3ciLCJBRlJBTUUiLCJNSU5EQVIiLCJhZGRTY3JpcHQiLCJzcmMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInMiLCJjcmVhdGVFbGVtZW50IiwiYXN5bmMiLCJvbmxvYWQiLCJvbmVycm9yIiwiRXJyb3IiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJhZGRDc3MiLCJocmVmIiwibCIsInJlbCIsImNvbnNvbGUiLCJsb2ciLCJ3YXJuIiwiY2hlY2tMb2FkZWQiLCJzZXRUaW1lb3V0IiwiZXJyIiwiU3RyaW5nIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useMindAR.ts\n"));

/***/ })

});